#!/usr/bin/env python3

# Copyright Armijn Hemel
# Licensed under Apache 2.0, see LICENSE file for details
# SPDX-License-Identifier: Apache-2.0

import re

BAUD_RATES = [9600, 19200, 38400, 57600, 115200, 921600, 1500000]
DATA_PARITY_STOP = {'8N1': '8N1',
                    '8 BIT 1 STOP NO PARITY': '8N1'}

# sometimes different names are used for the same brand
BRAND_REWRITE = {'FON Wireless': 'Fon Wireless',
                 'CFeon': 'cFeon',
                 'CFE (128k)': 'CFE',
                 'AppliedMicro': 'Applied Micro',
                 'BeagleBoard.org': 'BeagleBoard',
                 'Brite-view': 'brite-View',
                 'Brite-View': 'brite-View',
                 'Coreboot': 'coreboot',
                 'CoreBoot': 'coreboot',
                 'Devolo': 'devolo',
                 'Etrontech': 'EtronTech',
                 'FireTide': 'Firetide',
                 'GCT': 'GCT Semiconductor',
                 'Hak5': 'HAK5',
                 'HISILICON': 'HiSilicon',
                 'INexQ': 'iNexQ',
                 'inventec': 'Inventec',
                 'Invetec': 'Inventec',
                 'Kaonmedia': 'KAONMEDIA',
                 'KeeWiFi': 'Keewifi',
                 'Leolabs': 'leolabs',
                 'Li-Cor': 'LI-COR',
                 'MoFi Network': 'Mofi Network',
                 'no': '',
                 'No': '',
                 'Open-Mesh': 'Open Mesh',
                 'PC-Engines': 'PC Engines',
                 'phorus': 'Phorus',
                 'Piecemakers': 'PieceMakers',
                 'Phicomm': 'PHICOMM',
                 'Proxiim': 'Proxim',
                 'Radxa Limited': 'Radxa',
                 'Renasas': 'Renesas',
                 'Sandisk': 'SanDisk',
                 'SGE': 'Shenzhen Gongjin Electronics',
                 'SGE (T&W)': 'Shenzhen Gongjin Electronics',
                 'Sige': 'SiGe',
                 'SiGE': 'SiGe',
                 'STMicro': 'STMicroelectronics',
                 'STMicroclectronics': 'STMicroelectronics',
                 'ST Micro': 'STMicroelectronics',
                 'ST Microelectronics': 'STMicroelectronics',
                 'Technicolor': 'technicolor',
                 'TenPao': 'Ten Pao',
                 'Texas Instrument': 'Texas Instruments',
                 'TI': 'Texas Instruments',
                 'TP-Link': 'TP-LINK',
                 'UBoot': 'U-Boot',
                 'U-boot': 'U-Boot',
                 'U-Media': 'U-MEDIA',
                 'Wavlink': 'WAVLINK',
                 'Y-cam': 'Y-cam Solutions',
                 'Zilltek': 'ZillTek'}

# sometimes different names are used for the same country
COUNTRY_REWRITE = {'United States': 'USA',
                   'US': 'USA',
                   'United Kingdom': 'UK',
                   'China,Taiwan': 'China, Taiwan',
                   '\u200eChina': 'China',
                   '\u200eTaiwan': 'Taiwan'}

DEVICE_REWRITE = {'access pint': 'access point',
                  'outdppr access point': 'outdoor access point',
                  'wifi ap': 'wireless access point',
                  'wifi router': 'wireless router'}

DISTRO_REWRITE = {'AsusWRT-Merlin': 'Asuswrt-Merlin',
                  'LEDE Project': 'LEDE'}

# different names have been used for the different expansion
# slots. The names from the official specifications are used,
# even though sometimes these are contradictory (example: Micro-USB)
# Note: these entries are case insensitive!
EXPANSION_REWRITE = {'usb': 'USB',
                     'compact flash': 'CompactFlash',
                     'm.2 card slot': 'M.2',
                     'm.2 ssd slot': 'M.2 (SSD)',
                     '(ngff m.2)': 'M.2 (NGFF)',
                     'ngff (m.2)': 'M.2 (NGFF)',
                     'ngff m.2': 'M.2 (NGFF)',
                     'micro sd': 'microSD',
                     'microsd': 'microSD',
                     'microsd card': 'microSD',
                     'micro sd card': 'microSD',
                     'microsd card slot': 'microSD',
                     'micro sd card slot': 'microSD',
                     'microsd slot': 'microSD',
                     'micro sim card slot': 'micro-SIM Card slot',
                     'micro usb': 'Micro-USB',
                     'microusb': 'Micro-USB',
                     'microusb 2.0': 'Micro-USB 2.0',
                     'minipcie': 'Mini PCIe',
                     'minipcle': 'Mini PCIe',
                     'non-standard mini pcie': 'Mini PCIe (non-standard)',
                     'mini pcimini pci': 'Mini PCI',
                     'minisd card slot': 'miniSD Card',
                     'mini sim card slot': 'mini-SIM Card slot',
                     'mini usb': 'Mini-USB',
                     'nano sim card slot': 'nano-SIM Card slot',
                     'sd': 'SD Card',
                     'sd card slot': 'SD Card',
                     'sdhc': 'SDHC Card',
                     'sdhc card slot': 'SDHC Card',
                     'sim card slo': 'SIM Card slot',
                     'tf card slot': 'TF Card slot',
                     'usb2.0': 'USB 2.0',
                     'usb 2.0usb 2.0': 'USB 2.0',
                     'usb3.0': 'USB 3.0',
                     'usb 3.1 (gen1)': 'USB 3.1 (Gen 1)',
                     'usb type c': 'USB Type-C',
                     'usb (unk. version)': 'USB (unknown version)'}

# power supply style rewrites
STYLE_REWRITE = {'medium, horiz.': 'medium, horizontal',
                 'small, horiz.': 'small, horizontal'}

# tag lines rewrites
TAGLINES_REWRITE = {'Wirepess Repeater': 'Wireless Repeater'}


# a lookup table for default values for each of the
# identifiers in the TechInfoDepot data which should be ignored.
# For some fields different default values were used over time.
DEFAULT_VALUE = {
    '802.1qvlan': ['<!-- Support for 802.1q vlan tagging, Leave blank for unknown -->'],
    'acqam1': ['<!-- AC-qam -->'],
    'acqam2': ['<!-- AC-qam -->'],
    'acqam3': ['<!-- AC-qam -->'],
    'acqam4': ['<!-- AC-qam -->'],
    'addchip': ['<!-- Additional Chips -->'],
    'asin': ['<!-- ASIN number -->'],
    'asin2': ['<!-- ASIN number -->'],
    'asin3': ['<!-- ASIN number -->'],
    'asin4': ['<!-- ASIN number -->'],
    'asin5': ['<!-- ASIN number -->'],
    'asin_country': ['<!-- ASIN country -->'],
    'asin_country2': ['<!-- ASIN country -->', '<!-- ASIN2 country -->'],
    'asin_country3': ['<!-- ASIN country -->'],
    'asin_country4': ['<!-- ASIN country -->'],
    'asin_country5': ['<!-- ASIN country -->'],
    'auto_mdix': ['<!-- mdix support -->', '<!-- Support automdix -->'],
    'availability': ['<!-- Market availability -->'],
    'axqam1': ['<!-- AX-qam -->'],
    'axqam2': ['<!-- AX-qam -->'],
    'axqam3': ['<!-- AX-qam -->'],
    'boardid': ['<!-- Board Identification, Leave blank for none -->'],
    'bootwait': ['<!-- On or Off, Leave blank for unknown -->'],
    'bus': ['<!-- 8-bit, 16-bit, 32-bit, 64-bit, Leave blank for none -->'],
    'bus2': ['<!-- 8-bit, 16-bit, 32-bit, 64-bit, Leave blank for none -->'],
    'buttons': ['<!-- buttons available -->'],
    'caption': ['<!-- tagline -->'],
    'caption2': ['<!-- 2nd tagleine -->', '<!-- 2nd tagline -->', '<!-- tagline 2 -->',
                 '<!-- tagline 2, Leave blank if unknown -->'],
    'countrymanuf': ['<!-- Country device was manufactured in -->'],
    'cpu1chip': ['<!-- cpu1chip full -->'],
    'cpu1chip1': ['<!-- Brand;Model;Extra, info; -->', '<!-- cpu1chip full -->',
                  '<!-- Brand;Model;Extra, info; -->', '<!-- cpu1chip1 full -->'],
    'cpu1modelfull': ['<!-- CPU1 Full chip info -->'],
    'cpu1spd': ['<!-- CPU1 speed, MHz, GHz, Leave blank if unknown -->', '<!-- undocumented -->',
                '<!-- In MHz, number only Leave blank if unknown -->'],
    'cpu1_cores': ['<!-- 1,2,3,4 -->'],
    'cpu1_type_rev': ['<!-- CPU1 type Revision, Leave blank for unknown -->'],
    'cpu1_type2_rev': ['<!-- CPU1 type Revision, Leave blank for unknown -->',
                       '<!-- CPU1 type2 Revision, Leave blank for unknown -->'],
    'cpu1_type': ['<!-- ARM,MIPS,x86-64,PowerPC, -->', '<!-- ARM,MIPS -->',
                  '<!-- ARM,MIPS,X86, -->', '<!-- ARM,MIPS, -->',
                  '<!-- ARM,MIPS,x86-64, -->', '<!-- undocumented -->'],
    'cpu2brand': ['<!-- Brand? Leave blank if unknown -->'],
    'cpu2chip1': ['<!-- Brand;Model;Extra, info; -->'],
    'cpu2_cores': ['<!-- 1,2,3,4 -->'],
    'cpu2model': ['<!-- Model? Leave blank if unknown -->'],
    'cpu2modelfull': ['<!-- CPU2 Full chip info -->'],
    'cpu2spd': ['<!-- CPU1 speed, MHz, GHz, Leave blank if unknown -->',
                '<!-- CPU2 speed, MHz, GHz, Leave blank if unknown -->',
                '<!-- CPU2 speed, Leave blank if unknown -->',
                '<!-- In MHz, number only Leave blank if unknown -->'],
    'cpu2_type': ['<!-- ARM,MIPS,x86-64,PowerPC, -->', '<!-- ARM,MIPS -->',
                  '<!-- ARM,MIPS,X86, -->', '<!-- ARM,MIPS, -->',
                  '<!-- ARM,MIPS,x86-64, -->', '<!-- undocumented -->'],
    'cpu2_type_rev': ['<!-- CPU2 type Revision, Leave blank for unknown -->'],
    'ddwrtsupport': ['<!-- Supported, Not Supported, Incompatible, or leave blank for unknown -->'],
    'defaulip': ['<!-- ???.???.???.???, default IP Address -->'],
    'default_ch': ['<!-- Defaults channel(s) Radio(s) are set to -->'],
    'defaultlogin': ['<!-- default Login Name, Leave blank for unknown -->'],
    'defaultpass': ['<!-- default Password, Leave blank for unknown -->'],
    'defaultssid': ['<!-- default Wireless ID, Leave blank for unknown -->'],
    'dimensions': ['<!-- Size of device {{convert |length|x|widthordepth|x|height|in|mm}} -->',
                   '<!-- Size of device {{convert/3 |length|x|widthordepth|x|height|in|mm}} -->'],
    'dl': ['<!-- Download page url only -->'],
    'dx_sku': ['<!-- DealExtreme sku -->'],
    'ean': ['<!-- EAN number -->'],
    'ecc_id': ['<!-- eec-id -->'],
    'eoldate': ['<!-- End of Life date -->'],
    'estprice': ['<!-- Estimated retail price in US dollars -->'],
    'estreldate': ['<!-- Estimated release date -->'],
    'eth_cpu': ['<!-- true, -->', '<!-- true -->'],
    'eth1chip': ['<!-- Brand;Model;Extra, info; -->', '<!-- eth1chip full -->'],
    'ethchip1brand': ['<!-- Brand?, Leave blank if unknown -->'],
    'ethchip1modelfull': ['<!-- Ethernet1 full chip info -->'],
    'ethchip1model': ['<!-- Model?, Leave blank if unknown -->'],
    'eth2chip': ['<!-- Brand;Model;Extra, info; -->', '<!-- eth2chip full -->'],
    'ethchip2brand': ['<!-- Brand?, Leave blank if unknown -->'],
    'ethchip2modelfull': ['<!-- Ethernet2 full chip info -->'],
    'ethchip2model': ['<!-- Model?, Leave blank if unknown -->'],
    'eth3chip': ['<!-- Brand;Model;Extra, info; -->', '<!-- eth3chip full -->'],
    'ethchip3brand': ['<!-- Brand?, Leave blank if unknown -->'],
    'ethchip3modelfull': ['<!-- Ethernet3 full chip info -->'],
    'ethchip3model': ['<!-- Model?, Leave blank if unknown -->'],
    'eth4chip': ['<!-- Brand;Model;Extra, info; -->', '<!-- eth4chip full -->'],
    'ethchip4brand': ['<!-- Brand?, Leave blank if unknown -->'],
    'ethchip4modelfull': ['<!-- Ethernet4 full chip info -->'],
    'ethchip4model': ['<!-- Model?, Leave blank if unknown -->'],
    'eth_none': ['<!-- true, -->', '<!-- true -->'],
    'ethoui': ['<!-- Leave blank for unknown -->'],
    'ethstandard': ['<!-- IEEE 802.3?,IEEE 802.3,IEEE 802.3/3u,IEEE 802.3/3u/3ab,IEEE 802.3/3u/3x,IEEE 802.1x/3/3ab/3u/3x/3z -->'],
    'exp_M.2': ['<!-- Number of M.2 ports, Leave blank for none -->'],
    'exp_ata_num': ['<!-- Number of ATA Ports, Leave blank for none -->'],
    'exp_cf_num': ['<!-- Number Compact Flash Slots, Leave blank for none -->'],
    'exp_esata_num': ['<!-- Number of esata ports, Leave blank for none -->'],
    'exp_expcard_num': ['<!-- Number of Expresscard ports, Leave blank for none -->'],
    'exp_ide_num': ['<!-- Number of ide ports, Leave blank for none -->'],
    'exp_if_types': ['<!-- Expansion Interface types, Leave blank for none -->'],
    'exp_minipci_num': ['<!-- Number of Mini PCI Slots, Leave blank for none -->'],
    'exp_minipcie_num': ['<!-- Number of Mini PCIexpress Slots, Leave blank for none -->'],
    'exp_parallel': ['<!-- Number of parallel ports, Leave blank for none -->'],
    'exp_pcmcia_num': ['<!-- Number of pcmcia ports, Leave blank for none -->'],
    'exp_sata_num': ['<!-- Number of sata ports, Leave blank for none -->'],
    'exp_sdmmc_num': ['<!-- Number SD/MMC Slots, Leave blank for none -->'],
    'exp_sfp_num': ['<!-- Number of sfp ports, Leave blank for none -->'],
    'exp_sim_num': ['<!-- Number of sim Slots, Leave blank for none -->'],
    'exp_usb_num': ['<!-- Number of USB Ports, Leave blank for none -->'],
    'fandom': ['<!-- infodepot.fandom page, included underscores -->'],
    'fcc_id': ['<!-- Federal Communication Commission Identification Number -->'],
    'fccapprovdate': ['<!-- FCCID approval date -->'],
    'fla1_num': ['<!-- 1,2,3,4 -->'],
    'fla1chip': ['<!-- Brand;Model;Extra, info; -->'],
    'fla1chipbrand': ['<!-- Brand? Leave blank if unknown -->'],
    'fla1chipmodelfull': ['<!-- Flash1 full chip info -->'],
    'fla1chipmodel': ['<!-- Model? Leave blank if unknown -->'],
    'fla2chip': ['<!-- Brand;Model;Extra, info; -->'],
    'fla2_num': ['<!-- 1,2,3,4 -->'],
    'fla2chipmodel': ['<!-- Model? Leave blank if unknown -->'],
    'fla2chipmodelfull': ['<!-- Flash2 full chip info -->'],
    'fla3chip': ['<!-- Brand;Model;Extra, info; -->'],
    'fla3_num': ['<!-- 1,2,3,4 -->'],
    'flags': ['<!-- flags, Leave blank for none -->'],
    'flash1maxsize': ['<!-- Maximum size firmware can be in bytes -->',
                      '<!-- Maximum size firmware -->'],
    'flash1size': ['<!-- Size of flash -->'],
    'flash1type': ['<!-- Parallel,Serial(SPI),NAND,Compact Flash -->',
                   '<!-- Parallel,Serial(SPI),SPI NOR,NAND,Compact Flash, -->'],
    'flash2maxsize': ['<!-- Maximum size firmware can be in bytes -->'],
    'flash2size': ['<!-- Size of flash -->', '<!-- 0.0625,0.125,0.25,0.5,1,2,4,8,16,32,64,128,256,512,1024,2048 -->'],
    'flash2type': ['<!-- Parallel,Serial(SPI),NAND,Compact Flash -->',
                   '<!-- Parallel,Serial(SPI),SPI NOR,NAND,Compact Flash, -->'],
    'flash3type': ['<!-- Parallel,Serial(SPI),SPI NOR,NAND,Compact Flash, -->'],
    'flash3maxsize': ['<!-- Maximum size firmware can be in bytes -->'],
    'flash3size': ['<!-- Size of flash -->'],
    'gargoylesupport': ['<!-- Supported, Not Supported, Incompatible, or leave blank for unknown -->'],
    'gpu1_cores': ['<!-- 1,2,3,4 -->'],
    'gpu1spd': ['<!-- gpu speed, MHz, GHz, Leave blank if unknown -->'],
    'gpu1_type': ['<!-- ARM,MIPS,x86-64,PowerPC, -->'],
    'gpu1_type_rev': ['<!-- GPU1 type Revision, Leave blank for unknown -->'],
    'homepage': ['<!-- Product page, Leave blank if unknown -->'],
    'icid': ['<!-- Industry Canada Identification number, Leave blank for unknown -->'],
    'image1': ['<!-- Image filename -->'],
    'image1_size': ['<!-- Image size, ex.150px -->', '<!-- Image size, ex.200px -->'],
    'image2': ['<!-- 2nd image, Leave blank if unknown -->'],
    'is_manuf': ['<!-- Yes or No -->', '<!-- Yes, or No, -->'],
    'jtag': ['<!-- Full JTAG info -->'],
    'jtagport': ['<!-- Yes or No, Leave blank for unknown -->'],
    'lan_speed': ['<!-- 10MbE,100MbE,1GbE, -->', '<!-- 10/100/1000 -->'],
    'lan2_speed': ['<!-- 10MbE,100MbE,1GbE, -->', '<!-- 10/100/1000 -->'],
    'led': ['<!-- Led colors and descriptions -->'],
    'manuf': ['<!-- Manufacturer -->'],
    'manuf_model': ['<!-- Manufacturer Model -->'],
    'manuf_rev': ['<!-- Manufacturer Revision -->'],
    'newegg': ['<!-- newegg item number -->', '<!-- Newegg number -->'],
    'nqam1': ['<!-- 600, 800, 900, 1000, -->', '<!-- 600, 750, 900, 1000 -->',
              '<!-- 600, 750, 900, 1000, -->', '<!-- 600,750,900 -->'],
    'nqam2': ['<!-- 600, 800, 900, 1000, -->', '<!-- 600, 750, 900, 1000 -->',
              '<!-- 600,750,900 -->'],
    'nqam3': ['<!-- 600, 800, 900, 1000, -->', '<!-- 600, 750, 900, 1000 -->',
              '<!-- 600, 750, 900, 1000, -->'],
    'nvramsize': ['<!-- 32, 60, 64, etc... in kb, Leave blank for unknown -->'],
    'openwrtsupport': ['<!-- Supported, Not Supported, Incompatible, or leave blank for unknown -->'],
    'oui': ['<!-- Wireless OUI -->', '<!-- Leave blank for unknown -->'],
    'portbasedvlan': ['<!-- Support for port based vlan tagging, Leave blank for unknown -->'],
    'pp': ['<!-- product page url only -->'],
    'price': ['<!-- Estimated retail price in US dollars -->'],
    'pwr_ac_hz': ['<!-- AC Hertz -->'],
    'pwr_amp_ac': ['<!-- AC Amps -->'],
    'pwr_amp_dc': ['<!-- DC Amps -->'],
    'pwr_barrel_inner': ['<!-- Inner barrel size in mm -->'],
    'pwr_barrel_len': ['<!-- Length of barrel -->'],
    'pwr_barrel_outer': ['<!-- Outer barrel size in mm -->'],
    'pwr_conn': ['<!-- Connector Type -->'],
    'pwr_poe_amp': ['<!-- POE Amps -->'],
    'pwr_poe': ['<!-- POE Volts -->'],
    'pwr_poe_type': ['<!-- Type of POE -->'],
    'pwr_pol': ['<!-- Connector polarity -->'],
    'pwr_vac': ['<!-- AC Volts -->'],
    'pwr_vdc': ['<!-- DC Volts -->'],
    'pwr_volt_type': ['<!-- VDC,VAC or POE -->', '<!-- VDC,VAC or POE, -->',
                      '<!-- VDC,VAC, or POE, -->'],
    'rad1_ant_conn': ['<!-- Leave blank for unknown -->'],
    'rad1cap': ['<!-- radio capabilities, Leave blank for none or unknown -->'],
    'rad1chip1': ['<!-- Brand;Model;Extra, info; -->', '<!-- full chip info -->'],
    'rad1chip1brand': ['<!-- Brand?, Leave blank if unknown -->'],
    'rad1chip1cpu': ['<!-- true, -->'],
    'rad1chip2': ['<!-- Brand;Model;Extra, info; -->', '<!-- full chip info -->'],
    'rad1chip3': ['<!-- Brand;Model;Extra, info; -->', '<!-- full chip info -->'],
    'rad1chip1modelfull': ['<!-- radio1 chip1 full info -->'],
    'rad1chip1model': ['<!-- Model?, Leave blank if unknown -->'],
    'rad1chip2modelfull': ['<!-- radio1 chip2 full info -->'],
    'rad1chip2model': ['<!-- Model?, Leave blank if unknown -->'],
    'rad1chip3brand': ['<!-- Brand?, Leave blank if unknown -->'],
    'rad1chip3modelfull': ['<!-- radio1 chip3 full info -->'],
    'rad1chip3model': ['<!-- Model?, Leave blank if unknown -->'],
    'rad1correv': ['<!-- core revision, Leave blank for none or unknown -->'],
    'rad1g': ['<!-- 54, 108, Maximum throughput rated at -->'],
    'rad1mod': ['<!-- Radio module name, optional link, Leave blank for none -->'],
    'rad1modif': ['<!-- Radio Module Interface Type, Leave blank for none -->'],
    'rad1oui': ['<!-- Only if different from above OUI -->'],
    'rad1n': ['<!-- 150, 300, 450, 600, Maximum throughput rated at -->',
              '<!-- 150, 300, 450, Maximum throughput rated at -->'],
    'rad1rxchains': ['<!-- Number of receive radio chains, Leave blank if unknown -->'],
    'rad1sstreams': ['<!-- Number of spatial data streams, Leave blank if unknown -->'],
    'rad1txchains': ['<!-- Number of transmit radio chains, Leave blank if unknown -->'],
    'rad2ay': ['<!-- Maximum throughput rated at -->'],
    'rad2cap': ['<!-- radio capabilities, Leave blank for none or unknown -->'],
    'rad2chip1': ['<!-- Brand;Model;Extra, info; -->'],
    'rad2chip1cpu': ['<!-- true, -->'],
    'rad2chip1modelfull': ['<!-- radio2 chip1 full info -->'],
    'rad2chip2modelfull': ['<!-- radio2 chip2 full info -->'],
    'rad2chip3modelfull': ['<!-- radio2 chip3 full info -->'],
    'rad2chip2': ['<!-- Brand;Model;Extra, info; -->', '<!-- full chip info -->'],
    'rad2chip3': ['<!-- Brand;Model;Extra, info; -->', '<!-- full chip info -->'],
    'rad2correv': ['<!-- core revision, Leave blank for none or unknown -->'],
    'rad2mod': ['<!-- Radio module name, optional link, Leave blank for none -->'],
    'rad2modif': ['<!-- Radio Module Interface Type, Leave blank for none -->'],
    'rad2oui': ['<!-- Only if different from above OUI -->'],
    'rad2_ant_conn': ['<!-- Leave blank for unknown -->'],
    'rad2rxchains': ['<!-- Number of receive radio chains, Leave blank if unknown -->'],
    'rad2sstreams': ['<!-- Number of spatial data streams, Leave blank if unknown -->'],
    'rad2txchains': ['<!-- Number of transmit radio chains, Leave blank if unknown -->'],
    'rad3cap': ['<!-- radio capabilities, Leave blank for none or unknown -->'],
    'rad3chip1': ['<!-- Brand;Model;Extra, info; -->'],
    'rad3chip1brand': ['<!-- Brand?, Leave blank if unknown -->'],
    'rad3chip1modelfull': ['<!-- radio3 chip1 full info -->'],
    'rad3chip1model': ['<!-- Model?, Leave blank if unknown -->'],
    'rad3chip2': ['<!-- Brand;Model;Extra, info; -->'],
    'rad3chip2brand': ['<!-- Brand?, Leave blank if unknown -->'],
    'rad3chip2modelfull': ['<!-- radio3 chip2 full info -->'],
    'rad3chip2model': ['<!-- Model?, Leave blank if unknown -->'],
    'rad3chip3': ['<!-- Brand;Model;Extra, info; -->'],
    'rad3chip3brand': ['<!-- Brand?, Leave blank if unknown -->'],
    'rad3chip3modelfull': ['<!-- radio3 chip3 full info -->'],
    'rad3chip3model': ['<!-- Model?, Leave blank if unknown -->'],
    'rad3correv': ['<!-- core revision, Leave blank for none or unknown -->'],
    'rad3modif': ['<!-- Radio Module Interface Type, Leave blank for none -->'],
    'rad3mod': ['<!-- Radio module name, optional link, Leave blank for none -->'],
    'rad3oui': ['<!-- Only if different from above OUI -->'],
    'rad3_ant_conn': ['<!-- Leave blank for unknown -->'],
    'rad3sstreams': ['<!-- Number of spatial data streams, Leave blank if unknown -->'],
    'rad3txchains': ['<!-- Number of transmit radio chains, Leave blank if unknown -->'],
    'rad4chip1': ['<!-- Brand;Model;Extra, info; -->'],
    'rad4chip2': ['<!-- Brand;Model;Extra, info; -->'],
    'rad4chip3': ['<!-- Brand;Model;Extra, info; -->'],
    'rad4_ant_conn': ['<!-- Leave blank for unknown -->'],
    'rad4cap': ['<!-- radio capabilities, Leave blank for none or unknown -->'],
    'rad4correv': ['<!-- core revision, Leave blank for none or unknown -->'],
    'rad4modif': ['<!-- Radio Module Interface Type, Leave blank for none -->'],
    'rad4mod': ['<!-- Radio module name, optional link, Leave blank for none -->'],
    'rad4oui': ['<!-- Only if different from above OUI -->'],
    'rad4txchains': ['<!-- Number of transmit radio chains, Leave blank if unknown -->'],
    'ram1_num': ['<!-- Number of Ram chips -->'],
    'ram1chip': ['<!-- Brand;Model;Extra, info; -->'],
    'ram1chipbrand': ['<!-- Brand? Leave blank if unknown -->'],
    'ram1chipmodel': ['<!-- Model? Leave blank if unknown -->'],
    'ram1chipmodelfull': ['<!-- RAM1 full chip info -->'],
    'ram1size': ['<!-- Size of RAM -->'],
    'ram1spd': ['<!-- 3400,3333,3300,3200,3100,3000,2800,2666,2600,2400,2133,2000,1866,1600,1066,1333,800 -->', '<!-- RAM speed -->'],
    'ram1type': ['<!-- DDR,DDR2,DDR3,DDR4 -->', '<!-- DDR,DDR2,DDR3,DDR4, -->'],
    'ram1type1': ['<!-- SO-DIMM,SDRAM -->', '<!-- SO-DIMM,SDRAM, -->'],
    'ram2_num': ['<!-- Number of Ram chips -->'],
    'ram2chip': ['<!-- Brand;Model;Extra, info; -->'],
    'ram2chipbrand': ['<!-- Brand? Leave blank if unknown -->'],
    'ram2chipmodel': ['<!-- Model? Leave blank if unknown -->'],
    'ram2size': ['<!-- Size of RAM -->', '<!-- 2, 4, 8, 16, 32, 64, 128, 256, 512, etc... -->'],
    'ram2spd': ['<!-- 3400,3333,3300,3200,3100,3000,2800,2666,2600,2400,2133,2000,1866,1600,1066,1333,800 -->', '<!-- RAM speed -->'],
    'ram2type': ['<!-- DDR,DDR2,DDR3,DDR4 -->', '<!-- DDR,DDR2,DDR3,DDR4, -->'],
    'ram2type1': ['<!-- SO-DIMM,SDRAM -->', '<!-- SO-DIMM,SDRAM, -->'],
    'ram3_num': ['<!-- Number of Ram chips -->'],
    'ram3spd': ['<!-- 3400,3333,3300,3200,3100,3000,2800,2666,2600,2400,2133,2000,1866,1600,1066,1333,800 -->', '<!-- RAM speed -->'],
    'ram3type': ['<!-- DDR,DDR2,DDR3,DDR4 -->', '<!-- DDR,DDR2,DDR3,DDR4, -->'],
    'ram3type1': ['<!-- SO-DIMM,SDRAM -->', '<!-- SO-DIMM,SDRAM, -->'],
    'reldate': ['<!-- Release date -->'],
    'revision': ['<!-- Model Revision, Leave blank for none or unknown -->'],
    'serial': ['<!-- Full Serial info -->'],
    'series': ['<!-- Device series -->'],
    'sernum': ['<!-- First 4 or so for easy version identification -->'],
    'sp': ['<!-- Support page url only -->'],
    'specialfeat': ['<!-- Features that don\'t fit any place else, Leave blank for none -->'],
    'stock_bl_dist': ['<!-- bootloader distro -->'],
    'stock_bl_version': ['<!-- bootloader version -->'],
    'stock_bootloader': ['<!-- OEM Bootloader, BSP,CFE (128k),CFE,CFE (vender modified),U-Boot,U-Boot;3.3;Ralink,Redboot,ROME,RouterBOOT,Not Listed, Leave blank for unknown -->'],
    'stockbootloader': ['<!-- Name;Version;Distro -->'],
    'stockos': ['<!-- Name;Version;Distro -->'],
    'stock_os': ['<!-- OEM Operating System, Debian,eCos,ISOS,Linux,Nucleus RTOS,RouterOS,SlugOS,SuperTask!,ThreadX,μClinux,VxWorks,ZyNOS -->'],
    'stock_os_kern': ['<!-- OEM Operating System kernel revision -->'],
    'stock_os_sdk': ['<!-- OEM Operating System sdk revision -->'],
    'submodel': ['<!-- SubModel number, Leave blank for unknown -->',
                 '<!-- Submodel, Leave blank for none or unknown -->'],
    'submodelappend': ['<!-- yes for space -->', '<!-- yes, for space -->'],
    'subrevision': ['<!-- Model Subrevision, Leave blank for none or unknown -->'],
    'sup_jumbo': ['<!-- Jumbo frames support -->', '<!-- Support Jumbo frames -->'],
    'supportpage': ['<!-- Support page, Leave blank if unknown -->'],
    'sw_cpu': ['<!-- true, -->', '<!-- true -->'],
    'sw1chip': ['<!-- Brand;Model;Extra, info; -->', '<!-- Switch1 chip -->'],
    'switchmodelfull': ['<!-- Switch1 full chip info -->'],
    'tjtagsupport': ['<!-- Yes or No, Leave blank for unknown -->'],
    'tjtagversion': ['<!-- TJTAG Version number, Leave blank for unknown -->'],
    'tomatosupport': ['<!-- Supported, Not Supported, Incompatible, or leave blank for unknown -->'],
    'tomatousbsupport': ['<!-- Supported, Not Supported, Incompatible, or leave blank for unknown -->'],
    'tpfirmware': ['<!-- Third party firmware official support, AsusWRT-Merlin, CeroWrt, DD-WRT, DD-WRT (kong), DD-WRT (kongac), DD-WRT (kongarm), FreedomBox, FreshTomato-ARM, Gargoyle, LibreWrt, Oleg (wl500g), Oleg-ng (wl500g), OpenWrt, Tomato, Tomato RAF, Tomato (shibby), Tomato (Toastman), TomatoUSB, Wive-NG -->'],
    'totlan': ['<!-- total lan ports -->'],
    'totwan': ['<!-- total wan ports -->'],
    'upc': ['<!-- UPC number -->'],
    'us_id': ['<!-- US ID number -->', '<!-- US ID -->'],
    'usb_hub': ['<!-- USB hub compatibility -->'],
    'wan_speed': ['<!-- 10MbE,100MbE,1GbE, -->'],
    'wan2_speed': ['<!-- 10MbE,100MbE,1GbE, -->'],
    'weight': ['<!-- Weight of device {{convert|weight|oz|g}} -->'],
    'wikidevi': ['<!-- wikidevi.wi-cat.ru page, included underscores -->',
                 '<!-- Page name only, Must include underscore Leave blank for none -->'],
    'wikipedia': ['<!-- [[wikipedia:Main Page|Wikipedia]] Leave blank for none -->'],
    'wlclass': ['<!-- Wireless class -->'],
    'x86-64rev2': ['<!-- x86-64 Revision, Leave blank for unknown -->'],
}

HELPER_PAGE_TITLES = ['serial info', 'serialinfo', 'bootlog', 'boot log',
                      'additional info', 'other info', 'specs', 'nvram', 'info dump',
                      'bridge mode', 'opening this unit', 'pairing']

KNOWN_ASIN_IDENTIFIERS = ['asin', 'asin2', 'asin3', 'asin4', 'asin5', 'asin6']
KNOWN_ASIN_COUNTRY_IDENTIFIERS = ['asin_country', 'asin_country2', 'asin_country3',
                                  'asin_country4', 'asin_country5', 'asin_country6']
KNOWN_ASIN_COUNTRIES = ['AE', 'AU', 'CA', 'CN', 'DE', 'ES', 'FR',
                        'GB', 'IN', 'IT', 'JP', 'UK', 'US']

KNOWN_CPU_IDENTIFIERS_TID = ['cpu1_brand', 'cpu1brand', 'cpu1chip', 'cpu1chip1',
                             'cpu1_cores', 'cpu1_cores', 'cpu1_cores2', 'cpu1_cspeed',
                             'cpu1_model', 'cpu1model', 'cpu1modelfull', 'cpu1spd', 'cpu1spd2',
                             'cpu1threads', 'cpu1_total_cores', 'cpu1_type', 'cpu1_type2',
                             'cpu1_type2_rev', 'cpu1_type_rev', 'cpu2brand', 'cpu2chip1',
                             'cpu2_cores', 'cpu2model', 'cpu2modelfull', 'cpu2spd', 'cpu2_type',
                             'cpu2_type_rev', 'cpu3brand', 'cpu3model', 'cpu4brand', 'cpu4model']

KNOWN_CPU_IDENTIFIERS_WD = ['cpu1_brand', 'cpu1_cores', 'cpu1_cspeed', 'cpu1_model',
                            'cpu1_num', 'cpu1_speed', 'cpu2_brand', 'cpu2_cores',
                            'cpu2_cspeed', 'cpu2_model', 'cpu3_brand', 'cpu3_cores',
                            'cpu3_cspeed', 'cpu3_model', 'cpu4_brand', 'cpu4_cores',
                            'cpu4_cspeed', 'cpu4_model']

KNOWN_RADIO_IDENTIFIERS_TID = set(["rad1a", "rad1ac", "rad1ad", "rad1_ant_conn", "rad1ax", "rad1ay",
    "rad1b", "rad1be", "rad1cap", "rad1chip1", "rad1chip2", "rad1chip3", "rad1chip1cpu",
    "rad1correv", "rad1freq", "rad1g", "rad1mod", "rad1modif", "rad1n", "rad1oui", "rad1rxchains",
    "rad1sstreams", "rad1stand", "rad1txchains", "rad2a", "rad2ac", "rad2ad", "rad2_ant_conn",
    "rad2ax", "rad2b", "rad2be", "rad2cap", "rad2chip1", "rad2chip2", "rad2chip3", "rad2chip1cpu",
    "rad2correv", "rad2freq", "rad2g", "rad2mod", "rad2modif", "rad2n", "rad2oui", "rad2rxchains",
    "rad2sstreams", "rad2stand", "rad2txchains", "rad3a", "rad3ac", "rad3ad", "rad3_ant_conn",
    "rad3ax", "rad3ay", "rad3b", "rad3be", "rad3chip1", "rad3chip2", "rad3chip3", "rad3chip1brand",
    "rad3chip1cpu", "rad3chip1model", "rad3chip1modelfull", "rad3freq", "rad3g", "rad3mimostatus",
    "rad3mod", "rad3modif", "rad3n", "rad3oui", "rad3rxchains", "rad3sstreams", "rad3stand",
    "rad3txchains", "rad4b", "rad4chip1', 'rad4chip2', 'rad4chip3", "rad4freq", "rad4g", "rad4mod",
    "rad4n", "rad4rxchains", "rad4sstreams", "rad4stand", "rad4txchains",])

KNOWN_RADIO_IDENTIFIERS_WD = set(["wi1_module", "wi2_module", "wi3_module", "wi4_module",
                                  "wi1_module_if", "wi2_module_if", "wi3_module_if",
                                  "wi4_module_if"])

KNOWN_OS = set(['airOS', 'Android', 'Android TV', 'ArubaOS', 'Bananian', 'CBOS v2.0',
                'CompexWRT', 'Debian', 'delos', 'DrayOS', 'eCos', 'eeroOS', 'FreeRTOS', 'ISOS',
                'Linux', 'mFiOS', 'Nucleus RTOS', 'OpenWrt', 'PharOS', 'QTS Lite', 'Q-WRT',
                'reyeeOS', 'RokuOS', 'RouterOS', 'SonicOS', 'SuperTask!', 'ThreadX', 'tvOS',
                'VxWorks', 'Windows', 'Windows CE', 'ZyNOS', 'μClinux'])

KNOWN_ROOTFS = set(['btrfs', 'cramfs', 'ext2', 'ext3', 'ext4', 'jffs2',
                    'ramfs', 'squashfs', 'squashM', 'ubifs', 'yaffs', 'yaffs2'])

# regular expression for ASIN
REGEX_ASIN = re.compile(r'^B[\d\w]{9}$')

# regular expression for an IPv4 address
REGEX_IP = re.compile(r'(\d+\.\d+\.\d+\.\d+)(?::\d+)?')

# regular expression for symlinks, extracts:
# - permissions
# - number of links
# - group + user (either name or numerical id)
# - size
# - month, day, year or time
# - name
# - target
REGEX_LS_SYMLINK = re.compile(r'(l[\-rwx]{9})\s+(\d+)\s+([\w\d]+)\s+([\w\d]+)\s+(\d+)\s+(\w+)\s+(\d+)\s+([\d:]{4,5})\s+([\[\w\d\.\-/]+)\s+\->\s+([\w\d\.\-/]+)')

# regular expression for regular files and directories, extracts:
# - permissions
# - number of links
# - group + user (either name or numerical id)
# - size
# - month, day, year or time
# - name
REGEX_LS_REGULAR_DIRECTORY = re.compile(r'([\-d][\-rwx]{9})\s+(\d+)\s+([\w\d]+)\s+([\w\d]+)\s+(\d+)\s+(\w+)\s+(\d+)\s+([\d:]{4,5})\s+([\[\w\d\.\-/]+)')

# regular expression for character and block devices, extracts:
# - permissions
# - number of links
# - group + user (either name or numerical id)
# - major + minor device number
# - month, day, year or time
# - name
REGEX_LS_DEVICE = re.compile(r'([bc][\-rwx]{9})\s+(\d+)\s+([\w\d]+)\s+([\w\d]+)\s+(\d+)\s*,\s+(\d+)\s+(\w+)\s+(\d+)\s+([\d:]{4,5})\s+([\[\w\d\.\-/]+)')

# regular expression for OUI
# https://en.wikipedia.org/wiki/Organizationally_unique_identifier
REGEX_OUI = re.compile(r'^[0-9A-F]{2}:[0-9A-F]{2}:[0-9A-F]{2}$')

# regular expression for finding connectors in
# serial port information sections
REGEX_SERIAL_CONNECTOR = re.compile(r'([ADS]?J[CPX]?[W]?\d+)')
REGEX_SERIAL_CONNECTOR2 = re.compile(r'(CO?[MN]+\d+)')

REGEX_SERIAL_PIN_HEADER = re.compile(r'(?:via )?(\d+)[ -](?:in|pln|pin|pad|pads) ?(?:header|connector)?')

# several regular expressions for software and software versions
REGEX_BUSYBOX = re.compile(r'BusyBox (v\d\.\d+[\.\w+-]*\d*)')
REGEX_IPTABLES = re.compile(r'iptables (v1\.\d+[\.\w+-]*\d*)')
REGEX_LINUX_VERSION_ALT = re.compile(r'Linux version (\d\.\d+\.\d+[\.\+\w\d-]*)\s*\(([\w\d@\._\-\*]+)\)?')
REGEX_LINUX_VERSION = re.compile(r'Linux version (\d\.\d+\.\d+[\.\+\w\d-]*)')
REGEX_LINUX_KERNEL_COMMANDLINE = re.compile(r'Kernel command line:\s+([\w\d=,:\./ ()"\-]*)')
REGEX_ADTRAN_BOOTLOADER = re.compile(r'Adtran bootloader version (\d+\.\d+\.\d+)')
REGEX_UBOOT_RALINK = re.compile(r'Ralink UBoot Version: (\d+\.\d+[\.\d]*)')
REGEX_CFE = re.compile(r'CFE for [\d\w]+ version: v?(\d\.\d\.\d)')
REGEX_CFE_BROADCOM = re.compile(r'CFE version ([\d\.]+) (?:based on BBP 1\.0\.37 )?for BCM[\w\d]+')
REGEX_MINIUPNPD = re.compile(r'miniupnpd\[\d+\]:\s* listening on (\d+\.\d+\.\d+\.\d+:\d+)')
REGEX_MINIUPNPD_ALT = re.compile(r'miniupnpd\[\d+\]:\s*(\w*)? listening on port (\d+)')

# several regular expressions for output of ps
# example:   723 root       6404 S   /usr/sbin/smbd -D
REGEX_PS = re.compile(r'\s*\d+\s+\w+\s+\d+\s+\w+\s+([/\w\d\s\-_\.\+\*&]*)')

TOKEN_NAMES = [{'name': 'baud', 'has_params': False, 'error': 'Invalid baud rate'},
               {'name': 'bootloader', 'has_params': True, 'params': ['version'],
                'error': 'Invalid bootloader'},
               {'name': 'brand', 'has_params': False, 'error': 'Invalid brand'},
               {'name': 'chip', 'has_params': False, 'error': 'Invalid chip'},
               {'name': 'chip_type', 'has_params': False, 'error': 'Invalid chip type'},
               {'name': 'chip_vendor', 'has_params': False, 'error': 'Invalid chip vendor'},
               {'name': 'connector', 'has_params': False, 'error': 'Invalid connector'},
               {'name': 'cpe', 'has_params': False, 'error': 'Invalid CPE information'},
               {'name': 'cve', 'has_params': False, 'error': 'Invalid CVE information'},
               {'name': 'cveid', 'has_params': False, 'error': 'Invalid CVE id'},
               {'name': 'fcc', 'has_params': False, 'error': 'Invalid FCC information'},
               {'name': 'fccid', 'has_params': True, 'params': ['type'], 'error': 'Invalid FCC'},
               {'name': 'file', 'has_params': False, 'error': 'Invalid file'},
               {'name': 'flag', 'has_params': False, 'error': 'Invalid flag'},
               {'name': 'ignore_brand', 'has_params': False, 'error': 'Invalid brand'},
               {'name': 'ignore_odm', 'has_params': False, 'error': 'Invalid ODM'},
               {'name': 'ignore_origin', 'has_params': False, 'error': 'Invalid origin'},
               {'name': 'ip', 'has_params': False, 'error': 'Invalid IP'},
               {'name': 'jtag', 'has_params': True, 'params': ['populated'],
                'error': 'Invalid JTAG port information'},
               {'name': 'odm', 'has_params': False, 'error': 'Invalid ODM'},
               {'name': 'origin', 'has_params': False, 'error': 'Invalid origin'},
               {'name': 'os', 'has_params': False, 'error': 'Invalid OS'},
               {'name': 'overlays', 'has_params': False, 'error': 'Invalid overlay flag'},
               {'name': 'package', 'has_params': False, 'error': 'Invalid package'},
               {'name': 'partition', 'has_params': False, 'error': 'Invalid partition'},
               {'name': 'password', 'has_params': False, 'error': 'Invalid password'},
               {'name': 'pcbid', 'has_params': False, 'error': 'Invalid PCB id'},
               {'name': 'program', 'has_params': False, 'error': 'Invalid program'},
               {'name': 'rootfs', 'has_params': False, 'error': 'Invalid rootfs'},
               {'name': 'sdk', 'has_params': True, 'params': ['version'], 'error': 'Invalid SDK'},
               {'name': 'serial', 'has_params': True, 'params': ['populated'],
                'error': 'Invalid serial port information'},
               {'name': 'type', 'has_params': False, 'error': 'Invalid device type'},
               {'name': 'year', 'has_params': False, 'error': 'Invalid year'},
              ]

# a list of verified Atheros and Qualcomm Atheros chips (meaning model numbers exist)
ATHEROS_CHIPS = set([
    'AR9344', 'AR9331',
    'AR7240', 'AR7161',
    'AR9342', 'AR9341',
    'AR7241', 'AR7242',
    'AR9132', 'AR2315',
    'AR9130', 'AR7130',
    'QCA9558', 'QCA9563',
    'QCA9531', 'QCA9533',
    'QCA9557',
])

# a list of verified Broadcom chips (meaning model numbers exist)
BROADCOM_CHIPS = set([
    'B50212E',
    'BCM4718',
    'BCM5357',
    'BCM6328',
    'BCM6348',
    'BCM6358',
    'BCM6361',
    'BCM6368',
    'BCM6710',
    'BCM6715',
    'BCM6750',
    'BCM6755',
    'BCM6756',
    'BCM6818',
    'BCM68380',
    'BCM68460',
    'BCM68580',
    'BCM7208',
    'BCM7241',
    'BCM7252',
    'BCM7268U',
    'BCM7271',
    'BCM7358',
    'BCM7366',
    'BCM7413',
    'BCM7615',
    'BCM84861',
    'BCM84880',
    'BCM84881B0',
    'BCM89610',
])

# a list of verified MediaTek chips (meaning model numbers exist)
MEDIATEK_CHIPS = set([
  'MT7688AN', 'MT7628N',
  'MT7621A', 'MT7628AN',
  'MT7628NN', 'MT7620N',
  'MT7620A', 'MT7621AT',
])

# a list of verified Realtek chips (meaning model numbers exist)
REALTEK_CHIPS = set([
  'RTL8712', 'RTL9607',
])

# a list of verified ZyDAS chips (meaning model numbers exist)
ZYDAS_CHIPS = set([
    'ZD1201',
])

# big lookup table for chip manufacturers
CHIP_MANUFACTURERS = {
    '2Wire': set(),
    '5V Technologies': set(),
    'ADMtek': set(),
    'Allwinner': set(),
    'Altima': set(),
    'Ambarella': set(),
    'AMCC': set(),
    'AMD': set(),
    'Amlogic': set(),
    'AMRISC': set(),
    'Annapurna Labs': set(),
    'Apple': set(),
    'Applied Micro': set(),
    'Aquantia': set(),
    'ASIX': set(),
    'Atheros': ATHEROS_CHIPS,
    'Atmel': set(),
    'Attansic': set(),
    'Axis': set(),
    'Beceem': set(),
    'Brecis': set(),
    'BridgeCo': set(),
    'Broadcom': BROADCOM_CHIPS,
    'Broadlight': set(),
    'Cavium': set(),
    'Celeno': set(),
    'cFeon': set(),
    'Cirrus Logic': set(),
    'Conexant': set(),
    'CopperGate': set(),
    'Cortina Systems': set(),
    'Davicom': set(),
    'D-Link': set(),
    'EcoNet': set(),
    'Eon': set(),
    'ESMT': set(),
    'Espressif': set(),
    'EtronTech': set(),
    'Freescale': set(),
    'Fujitsu': set(),
    'GainSpan': set(),
    'GCT Semiconductor': set(),
    'Globespan Virata': set(),
    'Grain Media': set(),
    'HiSilicon': set(),
    'Hitachi': set(),
    'Hyperstone': set(),
    'IBM': set(),
    'IC+': set(),
    'iCatch': set(),
    'IDT': set(),
    'Ikanos': set(),
    'Infineon': set(),
    'Ingenic': set(),
    'Intel': set(),
    'Intellon': set(),
    'Intersil': set(),
    'Kendin': set(),
    'KeyASIC': set(),
    'Kingston': set(),
    'Lantiq': set(),
    'Macronix': set(),
    'Mali': set(),
    'Marvell': set(),
    'MaxLinear': set(),
    'MediaTek': MEDIATEK_CHIPS,
    'Micrel': set(),
    'Microchip': set(),
    'Mindspeed': set(),
    'Mitsumi': set(),
    'Motorola': set(),
    'Movidius': set(),
    'MStar': set(),
    'Nanya': set(),
    'National Semiconductor': set(),
    'NEC': set(),
    'No Wires Needed': set(),
    'Nuvoton': set(),
    'nVIDIA': set(),
    'NXP': set(),
    'Octavo Systems': set(),
    'OmniVision': set(),
    'Ozmo Devices': set(),
    'Parrot': set(),
    'Philips': set(),
    'PieceMakers': set(),
    'PLX Technology': set(),
    'PMC-Sierra': set(),
    'Prolific': set(),
    'ProMOS': set(),
    'Qorvo': set(),
    'Qualcomm': set(),
    'Qualcomm Atheros': ATHEROS_CHIPS,
    'Quantenna': set(),
    'Ralink': set(),
    'RDA': set(),
    'RDC': set(),
    'Realtek': REALTEK_CHIPS,
    'Renesas': set(),
    'RFMD': set(),
    'Richwave': set(),
    'Rockchip': set(),
    'Samsung': set(),
    'SanDisk': set(),
    'SE': set(),
    'SEEQ': set(),
    'ShareWave': set(),
    'SiFlower': set(),
    'Sigma Designs': set(),
    'SigmaTel': set(),
    'Silicon Data': set(),
    'SK hynix': set(),
    'Skyviia': set(),
    'Skyworks': set(),
    'SonicWALL': set(),
    'Sonix': set(),
    'Spansion': set(),
    'SST': set(),
    'Star': set(),
    'ST-Ericsson': set(),
    'STMicroelectronics': set(),
    'Storlink': set(),
    'Synaptics': set(),
    'Texas Instruments': set(),
    'TrendChip': set(),
    'TriDuctor': set(),
    'TriQuint': set(),
    'Toshiba': set(),
    'Ubicom': set(),
    'VIA': set(),
    'Virata': set(),
    'Vitesse': set(),
    'VLSI': set(),
    'WavePlus': set(),
    'Winbond': set(),
    'Xilinx': set(),
    'Zentel': set(),
    'ZyDAS': ZYDAS_CHIPS,
}
